package ru.astondevs.controller;

import ru.astondevs.dao.RoleDao;
import ru.astondevs.dto.UserDto;
import ru.astondevs.service.UserService;
import ru.astondevs.util.ConsoleHelper;

import java.util.List;
import java.util.Scanner;

public class ConsoleController {
    private final UserService userService = new UserService();
    private final RoleDao roleDao = RoleDao.getInstance();
    private final Scanner scanner = new Scanner(System.in);
    private final ConsoleHelper consoleHelper = new ConsoleHelper(scanner);
    private UserDto user = null;

    public void run() {
        printBanner();
        while (true) {
            handleView();
            System.out.print("> ");
            String command = scanner.nextLine();

            switch (command.toLowerCase()) {
                case "/create" -> handleCreate();
                case "/clear" -> handleClear();
                case "/view" -> handleView();
                case "/save" -> handleSave();
                case "/update" -> handleUpdate();
                case "/delete" -> handleDelete();
                case "/find_all" -> handleFindAll();
                case "/find_by_id" -> handleFindById();
                case "/help" -> handleHelp();
                case "/exit" -> { return; }
                default -> System.out.print("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞! \n/");
            }
        }
    }

    private void handleCreate() {
        String name = consoleHelper.readValidLine("–í–≤–µ–¥–∏—Ç–µ –∏–º—è: ");
        String email = consoleHelper.readValidLine("–í–≤–µ–¥–∏—Ç–µ –ø–æ—á—Ç—É: ");
        int age = consoleHelper.readValidInt("–í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç: ");
        Long roleId = consoleHelper.readValidRoleId(roleDao.findAll());

        user = new UserDto(name, email, age, roleId);

        System.out.print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å " + user.getName() + " —Å–æ–∑–¥–∞–Ω!\n");
        System.out.print("–î–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ - /save\n");
    }

    private void handleClear() {
        user = null;
        System.out.print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—á–∏—â–µ–Ω!\n");
    }

    private void handleView() {
        System.out.print("–ê–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ");
        System.out.println(user != null ? user.toString() :
                null + "\n–ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É - /create");
    }

    private void handleSave() {
        if (consoleHelper.isNull(user, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–æ–∑–¥–∞–Ω!")) return;
        UserDto userCreated = userService.save(user);
        System.out.print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å " + userCreated.getName() + " —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö!\n");
        user = null;
    }

    private void handleUpdate() {
        if (consoleHelper.isNull(user, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–æ–∑–¥–∞–Ω!")) return;
        int updateId = consoleHelper.readValidInt("–í–≤–µ–¥–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ");
        UserDto userUpdated = userService.update((long) updateId, user);
        System.out.print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å " + userUpdated.getName() + " –æ–±–Ω–æ–≤–ª–µ–Ω!\n");
        user = null;
    }

    private void handleDelete() {
        int deleteId = consoleHelper.readValidInt("–í–≤–µ–¥–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ");
        userService.delete((long) deleteId);
        System.out.print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω!\n");
    }

    private void handleFindAll() {
        System.out.print("–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: \n");
        List<UserDto> list = userService.findAll();

        if (consoleHelper.isEmpty(list, "–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π! \n")) return;

        for (UserDto user : list) {
            System.out.print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: " + user.toString() + "\n");
        }
    }

    private void handleFindById() {
        System.out.print("–í–≤–µ–¥–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ");
        String userId = scanner.nextLine();
        UserDto userFound = userService.findById(Long.parseLong(userId));
        if (consoleHelper.isNull(userFound, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!")) return;
        System.out.print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: " + userFound + "\n");
    }

    private static void printBanner() {
        System.out.println("====================================================");
        System.out.println("   üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –∫–æ–Ω—Å–æ–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ user-service");
        System.out.println("====================================================\n");
        handleHelp();
        System.out.println("====================================================");
        System.out.println("              –£–¥–∞—á–∏ –≤ —Ä–∞–±–æ—Ç–µ! üöÄ");
        System.out.println("====================================================\n");
    }

    private static void handleHelp() {
        System.out.println("üìå –ö–æ–º–∞–Ω–¥—ã:\n");
        System.out.println("üîπ –†–∞–±–æ—Ç–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º:");
        System.out.println("   /create   - —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
        System.out.println("   /view     - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
        System.out.println("   /clear    - –æ—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n");
        System.out.println("üîπ –†–∞–±–æ—Ç–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö:");
        System.out.println("   /save     - —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î");
        System.out.println("   /update   - –æ–±–Ω–æ–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î");
        System.out.println("   /delete   - —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î");
        System.out.println("   /find_all  - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π");
        System.out.println("   /find_by_id - –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID\n");
        System.out.println("üîπ –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: /help");
        System.out.println("üö™ –î–ª—è –≤—ã—Ö–æ–¥–∞ –Ω–∞–ø–∏—à–∏—Ç–µ: /exit\n");
    }
}
